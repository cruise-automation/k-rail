{{- $cn := printf "k-rail.%s.svc" .Release.Namespace }}
{{- $ca := genCA "k-rail-admission-ca" 3650 -}}
{{- $cert := genSignedCert $cn nil nil 3650 $ca -}}
---
apiVersion: v1
kind: Secret
metadata:
  name: k-rail-cert
  namespace: {{ .Release.Namespace }}
  labels:
    app: k-rail-cert
type: Opaque
data:
  cert.pem: {{ b64enc $cert.Cert }}
  key.pem: {{ b64enc $cert.Key }}
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: k-rail
  annotations:
    checksum/config: {{ print .Values.config | sha256sum }}
    checksum/exemptions: {{ print .Values.exemptions | sha256sum }}
webhooks:
  - name: k-rail.cruise-automation.github.com
    clientConfig:
      service:
        namespace: {{ .Release.Namespace }}
        name: k-rail
        path: "/"
      caBundle: {{ b64enc $ca.Cert }}
    rules:
      - operations: ["CREATE","UPDATE","CONNECT"]
        apiGroups: ["*"]
        apiVersions: ["*"]
        resources:
          - pods
          - deployments
          - replicationcontrollers
          - replicasets
          - daemonsets
          - statefulsets
          - jobs
          - cronjobs
          - ingresses
          - pods/exec
          - persistentvolumes
          - clusterrolebindings
          - rolebindings
          - services
    failurePolicy: {{ print .Values.failurePolicy }}
  {{- if .Values.reinvocationPolicy }}
    reinvocationPolicy: {{  print .Values.reinvocationPolicy }}
  {{- end }}
    sideEffects: None
    timeoutSeconds: 1  # doesn't do anything until 1.14
    namespaceSelector:
      matchExpressions:
        - key: k-rail/ignore
          operator: DoesNotExist
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k-rail
  namespace: {{ .Release.Namespace }}
  labels:
    name: k-rail
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      name: k-rail
  template:
    metadata:
      name: k-rail
      labels:
        name: k-rail
      annotations:
        checksum/config: {{ print .Values.config | sha256sum }}
        checksum/exemptions: {{ print .Values.exemptions | sha256sum }}
        checksum/tls: {{ print $ca.Cert | sha256sum }}
    spec:
      serviceAccountName: k-rail
      containers:
        - name: k-rail
          command: ["/k-rail", "-config=/config/config.yml", "-exemptions-path-glob=/exemptions/*.yml"]
          image: "{{ .Values.image.repository }}:{{ default (printf "release-%s" .Chart.Version) .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: k-rail-cert
              mountPath: /cert
              readOnly: true
            - name: config
              mountPath: /config
              readOnly: true
            - name: exemptions
              mountPath: /exemptions
              readOnly: true
          securityContext:
            readOnlyRootFilesystem: true
          ports:
            - containerPort: 10250
            - containerPort: 8000
          livenessProbe:
            httpGet:
              path: /
              port: 8000
          readinessProbe:
            httpGet:
              path: /
              port: 8000
      volumes:
        - name: k-rail-cert
          secret:
            secretName: k-rail-cert
        - name: config
          configMap:
            name: k-rail-config
        - name: exemptions
          configMap:
            name: k-rail-exemptions
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: k-rail
  namespace: {{ .Release.Namespace }}
spec:
  minAvailable: 1
  selector:
    matchLabels:
      name: k-rail
---
apiVersion: v1
kind: Service
metadata:
 name: k-rail
 namespace: {{ .Release.Namespace }}
 labels:
    name: k-rail
spec:
  ports:
  - name: validatingwebhook
    port: 443
    targetPort: 10250
  selector:
    name: k-rail
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: k-rail-config
  namespace: {{ .Release.Namespace }}
data:
  config.yml: |
    {{- toYaml .Values.config | nindent 4 }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: k-rail-exemptions
  namespace: {{ .Release.Namespace }}
data:
  config.yml: |
    {{- toYaml .Values.exemptions | nindent 4 }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: k-rail
rules:
- apiGroups:
  - "*"
  resources:
  - ingresses
  verbs:
  - list
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: k-rail
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k-rail
subjects:
- kind: ServiceAccount
  name: k-rail
  namespace: {{ .Release.Namespace }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k-rail
  namespace: {{ .Release.Namespace }}
